{"name":"Cameo","tagline":"cameo - computer assisted metabolic engineering & optimization","body":"## cameo - computer assisted metabolic engineering & optimization\r\n\r\n[![Build Status](https://travis-ci.org/biosustain/cameo.svg?branch=devel)](https://travis-ci.org/biosustain/cameo)\r\n[![Coverage Status](https://coveralls.io/repos/biosustain/cameo/badge.png?branch=devel)](https://coveralls.io/r/biosustain/cameo?branch=devel)\r\n[![Gitter chat](https://badges.gitter.im/biosustain/cameo.png)](https://gitter.im/biosustain/cameo)\r\n\r\n### Vision\r\nProvide a high-level python library to aid _in silico_ strain design process in metabolic engineering projects. The library provides a modular architecture that enables the efficient construction of custom analysis workflows.\r\n\r\n### Dependencies\r\nThis library depends on:\r\n\r\n- [cobrapy](https://github.com/opencobra/cobrapy) for constraint-based modeling\r\n- [optlang](https://github.com/biosustain/optlang) for heuristic optimization and mathematical programming\r\n\r\nFurthermore, the following dependencies are needed: \r\n\r\n- [numpy](http://www.numpy.org/) and [scipy](http://www.scipy.org/) for obvious reasons.\r\n- [IPython](http://ipython.org/) is needed for parallel computations and notebook interface.\r\n- [bokeh](http://bokeh.pydata.org/) is needed for reporting progress and plotting in the IPython notebook interface.\r\n- [pandas](http://pandas.pydata.org/) is needed because most functions returns results as pandas DataFrames.\r\n- [inspyred](https://pypi.python.org/pypi/inspyred) for evolutionary computations.\r\n\r\nComputationally heavy methods have been parallelized and can be run on a clusters using the IPython parallelization framework (see example and documentation for more details). The default fallback is python's multiprocessing library.\r\n\r\n### Installation\r\nRun\r\n    python setup.py install\r\nto install cameo. Installation is still a little bit shaky, so if it fails due to version mismatches, try to install the appropriate version manually and then retry `python setup.py install`. For example:\r\npip install pytz==2013b --upgrade","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}